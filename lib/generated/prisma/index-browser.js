
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.7.0
 * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
 */
Prisma.prismaVersion = {
  client: "6.7.0",
  engine: "3cff47a7f5d65c3ea74883f1d736e41d68ce91ed"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.ImageListScalarFieldEnum = {
  id: 'id',
  name: 'name',
  imageUrl: 'imageUrl'
};

exports.Prisma.Activation_tokenScalarFieldEnum = {
  created_at: 'created_at',
  expired_at: 'expired_at',
  id: 'id',
  member_id: 'member_id',
  token: 'token'
};

exports.Prisma.Ai_api_usageScalarFieldEnum = {
  call_count: 'call_count',
  usage_date: 'usage_date',
  created_at: 'created_at',
  id: 'id',
  member_id: 'member_id',
  updated_at: 'updated_at'
};

exports.Prisma.AuthorityScalarFieldEnum = {
  authority_name: 'authority_name'
};

exports.Prisma.CategoryScalarFieldEnum = {
  category_id: 'category_id',
  category_name: 'category_name'
};

exports.Prisma.IngredientScalarFieldEnum = {
  expiration_date: 'expiration_date',
  quantity: 'quantity',
  category_id: 'category_id',
  ingredient_id: 'ingredient_id',
  member_id: 'member_id',
  refrigerator_id: 'refrigerator_id',
  registration_date: 'registration_date',
  ingredient_name: 'ingredient_name',
  photo_url: 'photo_url'
};

exports.Prisma.MemberScalarFieldEnum = {
  activated: 'activated',
  created_at: 'created_at',
  member_id: 'member_id',
  updated_at: 'updated_at',
  email: 'email',
  nickname: 'nickname',
  password: 'password',
  fcm_token: 'fcm_token',
  role: 'role',
  join_type: 'join_type'
};

exports.Prisma.Refresh_tokenScalarFieldEnum = {
  auto_login: 'auto_login',
  created_at: 'created_at',
  expires_at: 'expires_at',
  id: 'id',
  issued_at: 'issued_at',
  member_id: 'member_id',
  updated_at: 'updated_at',
  device_info: 'device_info',
  value: 'value'
};

exports.Prisma.RefrigeratorScalarFieldEnum = {
  created_at: 'created_at',
  member_id: 'member_id',
  refrigerator_id: 'refrigerator_id',
  refrigerator_name: 'refrigerator_name',
  description: 'description',
  photo_url: 'photo_url'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.ImageListOrderByRelevanceFieldEnum = {
  name: 'name',
  imageUrl: 'imageUrl'
};

exports.Prisma.activation_tokenOrderByRelevanceFieldEnum = {
  token: 'token'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.authorityOrderByRelevanceFieldEnum = {
  authority_name: 'authority_name'
};

exports.Prisma.categoryOrderByRelevanceFieldEnum = {
  category_name: 'category_name'
};

exports.Prisma.ingredientOrderByRelevanceFieldEnum = {
  ingredient_name: 'ingredient_name',
  photo_url: 'photo_url'
};

exports.Prisma.memberOrderByRelevanceFieldEnum = {
  email: 'email',
  nickname: 'nickname',
  password: 'password',
  fcm_token: 'fcm_token',
  role: 'role'
};

exports.Prisma.refresh_tokenOrderByRelevanceFieldEnum = {
  device_info: 'device_info',
  value: 'value'
};

exports.Prisma.refrigeratorOrderByRelevanceFieldEnum = {
  refrigerator_name: 'refrigerator_name',
  description: 'description',
  photo_url: 'photo_url'
};
exports.member_join_type = exports.$Enums.member_join_type = {
  GOOGLE: 'GOOGLE',
  KAKAO: 'KAKAO',
  LOCAL: 'LOCAL',
  NAVER: 'NAVER'
};

exports.Prisma.ModelName = {
  ImageList: 'ImageList',
  activation_token: 'activation_token',
  ai_api_usage: 'ai_api_usage',
  authority: 'authority',
  category: 'category',
  ingredient: 'ingredient',
  member: 'member',
  refresh_token: 'refresh_token',
  refrigerator: 'refrigerator'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
